#!/bin/bash

# This file was generated by Ansible for {{ ansible_fqdn }}
# Do NOT modify this file by hand!

MONGODB_HOST={{ mongodb_backup_host }}
MONGODB_PORT={{ mongodb_backup_port }}
MONGODB_USER={{ mongodb_backup_user }}
MONGODB_PASS={{ mongodb_backup_pass }}
MONGODB_DB={{ mongodb_backup_db }}
S3PATH={{ mongodb_backup_s3path }}

TIMESTAMP=`/bin/date +"%Y%m%dT%H%M%S"`
BACKUP_NAME=${TIMESTAMP}.dump.gz
S3BACKUP=${S3PATH}/${BACKUP_NAME}
S3LATEST=${S3PATH}/latest.dump.gz

EXTRA_OPTS={{ mongodb_backup_opts }}

[[ ( -z "${MONGODB_USER}" ) && ( -n "${MONGODB_PASS}" ) ]] && MONGODB_USER='admin'
[[ ( -n "${MONGODB_USER}" ) ]] && EXTRA_OPTS="$EXTRA_OPTS --username ${MONGODB_USER}"
[[ ( -n "${MONGODB_PASS}" ) ]] && EXTRA_OPTS="$EXTRA_OPTS --password ${MONGODB_PASS}"
[[ ( -n "${MONGODB_DB}" ) ]] && EXTRA_OPTS="$EXTRA_OPTS --db ${MONGODB_DB}"

cd {{ mongodb_backup_home }}

echo "=> Backup started: $EXTRA_OPTS"

source ./aws

if mongodump --host ${MONGODB_HOST} --port ${MONGODB_PORT} ${USER_STR}${PASS_STR}${DB_STR} --archive=${BACKUP_NAME} --gzip ${EXTRA_OPTS} && {{mongodb_backup_aws_cmd}} s3 cp ${BACKUP_NAME} ${S3BACKUP} && {{mongodb_backup_aws_cmd}} s3 cp ${S3BACKUP} ${S3LATEST} && rm ${BACKUP_NAME} ;then
    echo "   > Backup succeeded"
else
    echo "   > Backup failed"
fi

echo "=> Done"
